@using TextToMotionWeb.Models
@{
    var user = ViewData["User"] as ApplicationUser;
}


@section PreLoaded{
    <link href="~/css/spinner.css" rel="stylesheet"/>
    <script type="text/javascript" src="~/lib/knockout/dist/knockout.js"></script>
}
<div data-bind="fadeVisible: !vm.pageLoaded()">
    <div class="spinner">
        <div class="cube1"></div>
        <div class="cube2"></div>
    </div>
</div>

<div id="page-content" style="display:none">
    <br />
    <div class="row">
        <div class="col s12 m12 l10 offset-l1">
            <div class="card">
                <div class="teal lighten-2 card-content">
                    <h4 class="center-align no-margins white-text"><i class="fa fa-image"></i> Process Image</h4>
                </div>
                <div class="card-content grey lighten-4">
                    <div class="row">
                        <div class="col s12 m3 l2">
                            <label class="xl-font">Add Image Via: </label><br />
                            <input id="file-upload" class="with-gap" value="File Upload" data-bind="checked: vm.optionForUpload" name="option" type="radio" checked/>
                            <label for="file-upload"><i class="fa fa-upload"></i> File Upload</label>
                            <input id="image-url" class="with-gap" value="Image URL" data-bind="checked: vm.optionForUpload" name="option" type="radio" />
                            <label for="image-url"><i class="fa fa-link"></i> Image URL</label>
                        </div>
                        <div class="col s12 m9 l10">
                            <div class="card-panel grey lighten-3">
                                <div class="row">
                                    <div class="file-field input-field col s12" data-bind="fadeVisible: vm.optionForUpload() == 'File Upload'">
                                        <div class="btn cyan">
                                            <span><i class="fa fa-file-o"></i> File</span>
                                            <input id="image-upload" type="file" name='image-upload' onchange="readURL(this);">
                                        </div>
                                        <div class="file-path-wrapper">
                                            <input class="file-path validate" type="text">
                                        </div>
                                    </div>
                                    <div class="input-field col s12" data-bind="fadeVisible: vm.optionForUpload() == 'Image URL'">
                                        <i class="material-icons prefix">link</i>
                                        <input id="icon_prefix" type="text" class="validate">
                                        <label for="icon_prefix">Please enter the URL of the image to process...</label>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- Modal Structure -->
    <div id="save-image-modal" class="modal bottom-sheet">
        <div class="modal-content">
            <h4>Modal Header</h4>
            <p>A bunch of text</p>
        </div>
        <div class="modal-footer">
            <a href="#!" class="modal-action modal-close waves-effect waves-green btn-flat">Agree</a>
        </div>
    </div>
</div>


@section Scripts{
    @{ await Html.RenderPartialAsync("ProcessImageViewModel"); }
    <script>
        function toggleForms(option) {
            console.log(option.html());
        }

        function readURL(input) {
            if (input.files && input.files[0]) {
                var reader = new FileReader();
                reader.onload = function (e) {
                    $('#image-preview').attr('src', e.target.result);
                };
                reader.readAsDataURL(input.files[0]);
            }
            else ($("#image-preview").attr('src', 'http://placehold.it/180'));
        }


        function processImage() {
            var imageInput = document.getElementById('image-upload');
            if (imageInput.files && imageInput.files[0]) {
                
                setTimeout(function () {
                    sendRequestToTFServer($('#image-preview').attr('src'));
                }, 2000);
                
            }
            else {
                var $toastContent = $('<h5 class="text-center"><i class="fa fa-exclamation-triangle"></i> Please Upload an Image or Add a Link</h5>');
                Materialize.toast($toastContent, 5000);
            }
        }


        function showSaveImageModal() {
            $('#show-image-modal').modal('show');
        }
    </script>
}