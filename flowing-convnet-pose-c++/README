1. Build caffe for CPU_ONLY under the caffe/ submodule in the repo.
1a. Feel free to generalize the code to work on GPU :).
2. Be sure to have installed the development files for OpenCV 2.4.
3. "make"
4. Run bin/estimate_pose and point it to the "matlab.prototxt" model prototxt
   layer-definition file and "caffe-heatmap-flic.caffemodel" binary proto
   weighting definition file, both under data/models/heatmap-flic-fusion.
   e.g.
   ./bin/estimate_pose ../data/media/1.png ../data/models/heatmap-flic-fusion/matlab.prototxt ../data/models/heatmap-flic-fusion/caffe-heatmap-flic.caffemodel

Calling C code compiled as shared-object library from C#:
gcc -fPIC -g -c test.c
gcc -shared -fPIC -Wl,-soname,libtest.so.1 -o libtest.so.1.0.1 test.o -lc

Use [DllImport(libtest)] (see P/Invoke documentation) to import the function
declaration.

Put libtest.so.1 in LD_LIBRARY_PATH (e.g. /usr/lib64, or call
"LD_LIBRARY_PATH=<qualified-path-to-lib> dotnet run").





###NOTES for Ubuntu###

1) Initialize and Install caffe

initialize the caffe submodule:
    navigate to the caffe directory
    >sudo git submodule update --init--recursive

before installing caffe:
    download all of the dependencies using sudo apt-get install ...
    http://caffe.berkeleyvision.org/install_apt.html

    now, in the caffe directory, to install:
    >make all

(the estimation_pose executable can't be run yet so will add to this later)
2)To run the flowing-convnets program for pose estimation

    in the 'flowing-convnets' directory, the Makefile needs to be changed to be able to run on Ubuntu
    the clang++ command will not run, you have to install clang as a package
        >sudo apt-get install libclang-3.5-dev
